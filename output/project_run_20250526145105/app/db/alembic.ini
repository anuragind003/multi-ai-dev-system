[alembic]
# Path to the migration scripts. This is relative to the directory containing alembic.ini.
# If alembic.ini is in app/db/ and the alembic environment is in app/db/alembic/,
# then script_location should be 'alembic'.
script_location = alembic

# The SQLAlchemy URL to connect to the database.
# This can be overridden by the --url option on the command line,
# or by the ALCHEMY_URL environment variable.
# For production, it's highly recommended to use environment variables
# (e.g., via env.py reading from os.environ).
#
# Example for PostgreSQL:
# postgresql://user:password@host:port/database_name
#
# Using a default for local development:
sqlalchemy.url = postgresql://postgres:postgres@localhost:5432/cdp_db

# Name of the table used to store current revision
revision_table_basename = alembic_version

# Autogenerate revision file name template
file_template = %%(rev)s_%%(slug)s

# Set to 'true' to run migrations in a transaction, 'false' otherwise.
# Recommended to keep as 'true' for data integrity.
transaction_per_migration = true

# Default timezone for timestamps.
# Consider setting this to 'UTC' for consistency across systems.
timezone = UTC

# A comma-separated list of 'include' or 'exclude' patterns,
# which are applied to the names of tables and columns when
# autogenerating migrations.
# For example: include_object = my_table, another_table
# exclude_object = some_other_table
# include_schemas = public, my_schema

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S