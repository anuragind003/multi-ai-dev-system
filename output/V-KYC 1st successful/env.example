# This file serves as a template for your .env file.
# Copy this file to .env in the root directory and fill in the values.
# Do NOT commit your actual .env file to version control, especially with sensitive data.

# --- Backend (FastAPI) Configuration ---
# Database connection URL for PostgreSQL.
# Format: postgresql://user:password@host:port/database_name
# For local Docker Compose setup, 'db' is the service name for the PostgreSQL container.
DATABASE_URL="postgresql://user:password@db:5432/mydatabase"

# A secret key for FastAPI applications, used for things like session management,
# token encoding, etc. GENERATE A STRONG, RANDOM KEY FOR PRODUCTION.
# Example: openssl rand -hex 32
SECRET_KEY="your_super_secret_key_for_fastapi_development_only"

# Comma-separated list of allowed origins for CORS (Cross-Origin Resource Sharing).
# In development, this typically includes your frontend's local URL.
# In production, this should be your frontend's actual domain (e.g., https://your-frontend-domain.com).
CORS_ORIGINS="http://localhost:3000,http://localhost:8000"

# --- Frontend (Next.js) Configuration ---
# The base URL for your backend API.
# In development, this points to your local backend.
# In production, this will be the public URL of your API Gateway or Load Balancer.
NEXT_PUBLIC_API_URL="http://localhost:8000"

# --- Database (PostgreSQL) Configuration (for Docker Compose) ---
# These are used by the 'db' service in docker-compose.yml.
# For production RDS, these values are managed by AWS Secrets Manager and Terraform.
POSTGRES_DB="mydatabase"
POSTGRES_USER="user"
POSTGRES_PASSWORD="password"