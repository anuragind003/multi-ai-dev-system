[alembic]
# path to migration scripts
script_location = %(here)s/versions

# template used to generate new revision files.
# %%(rev)s is the revision ID, %%(slug)s is the message slug.
file_template = %%(rev)s_%%(slug)s

# The sqlalchemy.url path used to connect to the database.
# This is the primary configuration for Alembic to know which database to migrate.

# For SQLite (development/small-scale production):
# The path `../instance/tasks.db` assumes:
# - `alembic.ini` is located in `backend/migrations/`
# - The SQLite database file `tasks.db` will be created/located in `backend/instance/`
# The `sqlite:///` prefix indicates a file-based database.
sqlalchemy.url = sqlite:///../instance/tasks.db

# For PostgreSQL (future scalability):
# Uncomment and modify the line below for PostgreSQL.
# Replace `user`, `password`, `host`, `port`, and `database_name` with your actual credentials.
# sqlalchemy.url = postgresql://user:password@host:port/database_name

# revision identifiers should start with 'v' (for version)
# and be followed by a timestamp or a sequential number.
# This is a common convention for better readability and sorting.
# revision_environment = true

# The 'versions' directory can be split into multiple locations if needed.
# For this project, a single `versions` directory is sufficient.
# version_locations = %(here)s/versions

# Logging configuration for Alembic operations.
# This section defines how Alembic's output is handled (e.g., printed to console).
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
# Set to INFO for more detailed SQLAlchemy logging (e.g., SQL queries).
# Set to WARN for less verbose output, showing only warnings and errors.
level = WARN
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
# Set to INFO to see Alembic's migration progress and commands.
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S