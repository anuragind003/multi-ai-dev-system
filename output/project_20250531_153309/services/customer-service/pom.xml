<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit default settings from Spring Boot Starter Parent POM -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version> <!-- Using a stable Spring Boot 3.x version -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- Project coordinates and metadata -->
	<groupId>com.ltfs.cdp</groupId>
	<artifactId>customer-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>customer-service</name>
	<description>Customer Service for LTFS Offer CDP (Customer Data Platform)</description>

	<!-- Project properties for consistent configuration -->
	<properties>
		<java.version>17</java.version> <!-- Standard Java version for Spring Boot 3.x -->
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring-cloud.version>2023.0.1</spring-cloud.version> <!-- Compatible Spring Cloud version for Spring Boot 3.2.x -->
	</properties>

	<!-- Dependency Management for Spring Cloud components -->
	<!-- This section ensures consistent versions for Spring Cloud dependencies across modules -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Project Dependencies -->
	<dependencies>
		<!-- Spring Boot Starter for building web, including RESTful, applications -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Starter for using Spring Data JPA with Hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- PostgreSQL JDBC Driver for database connectivity -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope> <!-- Runtime scope as it's only needed at runtime -->
		</dependency>

		<!-- Lombok for reducing boilerplate code (getters, setters, constructors, etc.) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional> <!-- Optional dependency, not required for compilation of other modules -->
		</dependency>

		<!-- Spring Boot Starter for validation (e.g., @Valid annotations for DTOs) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Spring Boot Starter for production-ready features (monitoring, metrics, health checks) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Cloud Netflix Eureka Client for service registration and discovery -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- Spring Kafka for building event-driven microservices with Apache Kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<!-- Spring Boot DevTools for faster development cycles (automatic restarts, live reload) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter for testing (JUnit, Mockito, Spring Test) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!-- Test scope, only needed for running tests -->
		</dependency>

		<!-- Spring Kafka Test for testing Kafka-related components -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin to create an executable JAR -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Exclude Lombok from the final JAR to avoid issues if not needed at runtime -->
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>