<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit from Spring Boot Starter Parent for dependency management and plugin configuration -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version> <!-- Using a recent stable Spring Boot version -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.ltfs.cdp</groupId>
	<artifactId>business-rule-engine-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>business-rule-engine-service</name>
	<description>Business Rule Engine Service for LTFS Offer CDP, leveraging Drools for dynamic rule processing.</description>

	<properties>
		<java.version>17</java.version> <!-- Standard Java version for modern Spring Boot applications -->
		<drools.version>8.44.0.Final</drools.version> <!-- Specify a compatible Drools version -->
	</properties>

	<dependencies>
		<!-- Spring Boot Web Starter for building RESTful APIs -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Data JPA Starter for database interaction (if needed for rule persistence or data access) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- PostgreSQL JDBC Driver -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring Boot Validation Starter for declarative validation using Jakarta Bean Validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Drools Core Dependencies for the Business Rule Engine -->
		<!-- kie-spring provides integration with Spring Framework -->
		<dependency>
			<groupId>org.kie</groupId>
			<artifactId>kie-spring</artifactId>
			<version>${drools.version}</version>
		</dependency>
		<!-- drools-compiler is needed to compile DRL (Drools Rule Language) files -->
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
			<version>${drools.version}</version>
		</dependency>
		<!-- drools-core contains the core Drools engine functionality -->
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-core</artifactId>
			<version>${drools.version}</version>
		</dependency>
		<!-- drools-decisiontables is useful if rules are defined in decision tables (e.g., Excel) -->
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-decisiontables</artifactId>
			<version>${drools.version}</version>
		</dependency>
		<!-- kie-api provides the API for KIE (Knowledge Is Everything) -->
		<dependency>
			<groupId>org.kie</groupId>
			<artifactId>kie-api</artifactId>
			<version>${drools.version}</version>
		</dependency>

		<!-- Lombok for reducing boilerplate code (e.g., getters, setters, constructors) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Test Starter for unit and integration testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin for packaging the application as an executable JAR -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${project.parent.version}</version>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</dependency>
			<!-- Maven Compiler Plugin to ensure compilation with the specified Java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!-- Maven Surefire Plugin for running unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>false</skipTests> <!-- Set to true to skip tests during build -->
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>