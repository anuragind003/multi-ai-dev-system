package com.ltfs.cdp.offer.dto;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 * Data Transfer Object (DTO) for Offer entity.
 * This DTO is used to transfer offer-related data between different layers
 * of the application, such as between the controller and service layers,
 * or for external API communication.
 * It encapsulates key attributes of a customer offer within the LTFS CDP system,
 * supporting functionalities like deduplication and customer 360 view.
 */
@Data // Generates getters, setters, toString, equals, and hashCode methods
@NoArgsConstructor // Generates a no-argument constructor
@AllArgsConstructor // Generates a constructor with all fields as arguments
public class OfferDTO {

    /**
     * Unique identifier for the offer.
     * This ID is typically generated by the source system or the CDP.
     */
    private String offerId;

    /**
     * Identifier of the customer to whom the offer is extended.
     * This links the offer to a specific customer profile in the CDP.
     */
    private String customerId;

    /**
     * Identifier of the campaign under which this offer was generated.
     * Helps in tracking the origin and context of the offer.
     */
    private String campaignId;

    /**
     * Type of the offer, e.g., "Loyalty", "Preapproved", "E-aggregator", "Top-up".
     * Crucial for applying specific deduplication logic (e.g., Top-up offers).
     */
    private String offerType;

    /**
     * Product type associated with the offer, e.g., "Personal Loan", "Home Loan", "Business Loan".
     * Categorizes the financial product being offered.
     */
    private String productType;

    /**
     * The principal amount of the offer.
     * Uses BigDecimal for precise monetary calculations.
     */
    private BigDecimal offerAmount;

    /**
     * The interest rate applicable to the offer.
     * Uses BigDecimal for precise rate calculations.
     */
    private BigDecimal interestRate;

    /**
     * The tenure of the loan/offer in months.
     */
    private Integer tenureMonths;

    /**
     * Current status of the offer, e.g., "Active", "Expired", "Accepted", "Rejected", "Deduplicated".
     * Reflects the lifecycle stage of the offer.
     */
    private String offerStatus;

    /**
     * The date from which the offer is valid.
     * Uses LocalDate for date-only representation.
     */
    private LocalDate validFrom;

    /**
     * The date until which the offer is valid.
     * Uses LocalDate for date-only representation.
     */
    private LocalDate validTo;

    /**
     * Timestamp when the offer record was created in the system.
     * Uses LocalDateTime for date and time.
     */
    private LocalDateTime creationDate;

    /**
     * Timestamp when the offer record was last updated.
     * Uses LocalDateTime for date and time.
     */
    private LocalDateTime lastUpdatedDate;

    /**
     * The source system from which this offer originated, e.g., "Offermart".
     * Important for tracing data lineage and understanding data quality.
     */
    private String sourceSystem;

    /**
     * Status indicating the outcome of the deduplication process for this offer.
     * Examples: "ORIGINAL" (this offer is the primary one), "DUPLICATE_REMOVED" (this offer was identified as a duplicate and removed),
     * "PENDING_DEDUPE" (awaiting deduplication), "NOT_APPLICABLE" (deduplication not required for this offer type).
     */
    private String deduplicationStatus;

    /**
     * Any additional remarks or notes related to the offer.
     * Can be used for internal comments or specific conditions.
     */
    private String remarks;
}