<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Parent POM for Spring Boot projects, providing dependency management and default configurations. -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version> <!-- Using a recent stable Spring Boot version -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- Project coordinates -->
	<groupId>com.ltfs.cdp</groupId>
	<artifactId>offer-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>offer-service</name>
	<description>Offer Service for LTFS Offer CDP</description>

	<!-- Project properties -->
	<properties>
		<java.version>17</java.version> <!-- Java 17 is recommended for Spring Boot 3+ -->
		<lombok.version>1.18.30</lombok.version> <!-- Specify Lombok version -->
	</properties>

	<!-- Project dependencies -->
	<dependencies>
		<!-- Spring Boot Starter for building web, including RESTful, applications using Spring MVC. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Starter for using Spring Data JPA with Hibernate. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- PostgreSQL JDBC Driver for connecting to PostgreSQL database. -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring Boot Starter for validation, using Hibernate Validator and Jakarta Bean Validation. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Lombok: A library that automatically plugs into your build process to
		     generate boilerplate code like getters, setters, constructors, etc. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter for Actuator, providing production-ready features
		     to monitor and manage your application. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Kafka: Provides abstractions for publishing and consuming messages.
		     Essential for event-driven architecture. -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<!-- Spring Boot Starter for testing, including JUnit, Mockito, and Spring Test. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Kafka Test: Provides utilities for testing Kafka-based applications. -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin: Packages the project as an executable JAR. -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</dependency>
		</plugins>
	</build>

</project>