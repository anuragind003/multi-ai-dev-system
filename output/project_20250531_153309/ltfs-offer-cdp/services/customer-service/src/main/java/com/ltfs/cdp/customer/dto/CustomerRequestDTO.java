package com.ltfs.cdp.customer.dto;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Past;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;

import java.time.LocalDate;

/**
 * Data Transfer Object (DTO) for incoming customer data requests.
 * This DTO is used for creating or updating customer profiles in the LTFS Offer CDP system.
 * It includes basic column-level validation as per functional requirements, ensuring data integrity
 * before processing for deduplication and profile management.
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class CustomerRequestDTO {

    /**
     * Unique identifier for the customer.
     * This field is typically null for new customer creation requests,
     * as the ID will be generated by the system.
     * It is expected to be present for update requests to identify the existing customer.
     */
    private String customerId;

    /**
     * First name of the customer.
     * This is a mandatory field and must not be blank.
     * Maximum length is 100 characters.
     */
    @NotBlank(message = "First name cannot be blank")
    @Size(max = 100, message = "First name cannot exceed 100 characters")
    private String firstName;

    /**
     * Last name of the customer.
     * This is a mandatory field and must not be blank.
     * Maximum length is 100 characters.
     */
    @NotBlank(message = "Last name cannot be blank")
    @Size(max = 100, message = "Last name cannot exceed 100 characters")
    private String lastName;

    /**
     * Middle name of the customer.
     * This is an optional field.
     * Maximum length is 100 characters.
     */
    @Size(max = 100, message = "Middle name cannot exceed 100 characters")
    private String middleName;

    /**
     * Date of birth of the customer.
     * This is a mandatory field and must not be null.
     * The date must be in the past, ensuring a valid birth date.
     */
    @NotNull(message = "Date of birth cannot be null")
    @Past(message = "Date of birth must be in the past")
    private LocalDate dateOfBirth;

    /**
     * Gender of the customer.
     * This is a mandatory field and must not be blank.
     * Valid values are 'M' (Male), 'F' (Female), or 'O' (Other).
     */
    @NotBlank(message = "Gender cannot be blank")
    @Pattern(regexp = "^[MFO]$", message = "Gender must be 'M', 'F', or 'O'")
    private String gender;

    /**
     * Email address of the customer.
     * This is a mandatory field and must not be blank.
     * It must conform to a valid email format.
     * Maximum length is 255 characters.
     */
    @NotBlank(message = "Email cannot be blank")
    @Email(message = "Email should be a valid email address")
    @Size(max = 255, message = "Email cannot exceed 255 characters")
    private String email;

    /**
     * Mobile number of the customer.
     * This is a mandatory field and must not be blank.
     * It is validated to be a 10-digit number, typically starting with 6, 7, 8, or 9
     * for Indian mobile numbers.
     */
    @NotBlank(message = "Mobile number cannot be blank")
    @Pattern(regexp = "^[6-9]\\d{9}$", message = "Mobile number must be 10 digits starting with 6, 7, 8 or 9")
    private String mobileNumber;

    /**
     * Permanent Account Number (PAN) of the customer.
     * This is a mandatory field and must not be blank.
     * It is validated against the standard Indian PAN format (e.g., ABCDE1234F).
     */
    @NotBlank(message = "PAN number cannot be blank")
    @Pattern(regexp = "[A-Z]{5}[0-9]{4}[A-Z]{1}", message = "PAN number must be in a valid format (e.g., ABCDE1234F)")
    private String panNumber;

    /**
     * Aadhaar number of the customer.
     * This is a mandatory field and must not be blank.
     * It is validated to be a 12-digit number.
     */
    @NotBlank(message = "Aadhaar number cannot be blank")
    @Pattern(regexp = "^\\d{12}$", message = "Aadhaar number must be 12 digits")
    private String aadhaarNumber;

    /**
     * First line of the customer's address.
     * This is a mandatory field and must not be blank.
     * Maximum length is 255 characters.
     */
    @NotBlank(message = "Address Line 1 cannot be blank")
    @Size(max = 255, message = "Address Line 1 cannot exceed 255 characters")
    private String addressLine1;

    /**
     * Second line of the customer's address.
     * This is an optional field.
     * Maximum length is 255 characters.
     */
    @Size(max = 255, message = "Address Line 2 cannot exceed 255 characters")
    private String addressLine2;

    /**
     * City of the customer's address.
     * This is a mandatory field and must not be blank.
     * Maximum length is 100 characters.
     */
    @NotBlank(message = "City cannot be blank")
    @Size(max = 100, message = "City cannot exceed 100 characters")
    private String city;

    /**
     * State of the customer's address.
     * This is a mandatory field and must not be blank.
     * Maximum length is 100 characters.
     */
    @NotBlank(message = "State cannot be blank")
    @Size(max = 100, message = "State cannot exceed 100 characters")
    private String state;

    /**
     * Pincode of the customer's address.
     * This is a mandatory field and must not be blank.
     * It is validated to be a 6-digit number, typical for Indian pincodes.
     */
    @NotBlank(message = "Pincode cannot be blank")
    @Pattern(regexp = "^\\d{6}$", message = "Pincode must be 6 digits")
    private String pincode;

    /**
     * The type of product associated with this customer request.
     * This field is crucial for applying specific deduplication logic,
     * such as distinguishing between "Loyalty", "Preapproved", "E-aggregator", or "Top-up Loan" offers.
     * This is a mandatory field and must not be blank.
     * Maximum length is 50 characters.
     */
    @NotBlank(message = "Product type cannot be blank")
    @Size(max = 50, message = "Product type cannot exceed 50 characters")
    private String productType;

    /**
     * The source system from which this customer data originated.
     * Examples include "Offermart", "Customer 360", etc.
     * This is a mandatory field and must not be blank, used for traceability.
     * Maximum length is 50 characters.
     */
    @NotBlank(message = "Source system cannot be blank")
    @Size(max = 50, message = "Source system cannot exceed 50 characters")
    private String sourceSystem;

    /**
     * Loan account number associated with the customer, if applicable.
     * This field is relevant for existing loan customers or specific loan product types.
     * This is an optional field.
     * Maximum length is 50 characters.
     */
    @Size(max = 50, message = "Loan account number cannot exceed 50 characters")
    private String loanAccountNumber;

    /**
     * Any additional remarks or notes about the customer.
     * This is an optional field.
     * Maximum length is 500 characters.
     */
    @Size(max = 500, message = "Remarks cannot exceed 500 characters")
    private String remarks;
}