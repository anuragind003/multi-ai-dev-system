<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit from Spring Boot Starter Parent for dependency management and plugin configuration -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version> <!-- Using a stable Spring Boot 2.x version -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.ltfs.cdp.gateway</groupId>
	<artifactId>api-gateway-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>api-gateway-service</name>
	<description>API Gateway service for LTFS Offer CDP Microservices</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>2021.0.8</spring-cloud.version> <!-- Compatible with Spring Boot 2.7.x -->
	</properties>

	<dependencies>
		<!-- Spring Cloud Gateway Starter: Provides the core API Gateway functionality -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>

		<!-- Spring Cloud Netflix Eureka Client: For service registration and discovery -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- Spring Boot Actuator: Provides production-ready features like monitoring and management endpoints -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Cloud Circuit Breaker Resilience4j: For fault tolerance and resilience patterns (e.g., circuit breaking, rate limiting) -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>

		<!-- Spring Cloud Config Client: To fetch configuration from a Spring Cloud Config Server -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- Spring Cloud Sleuth: For distributed tracing across microservices -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<!-- Spring Cloud Sleuth Zipkin: To send trace data to Zipkin for visualization -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>

		<!-- Spring Boot DevTools: Provides development-time features like automatic restarts -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter Test: For writing unit and integration tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Dependency Management for Spring Cloud: Ensures consistent versions of Spring Cloud components -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin: Creates an executable JAR and manages application lifecycle -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</dependency>
			<!-- Maven Compiler Plugin: Ensures the correct Java version is used for compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- Maven Surefire Plugin: Configures and runs unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Skips test execution during build if 'skipTests' property is set -->
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>