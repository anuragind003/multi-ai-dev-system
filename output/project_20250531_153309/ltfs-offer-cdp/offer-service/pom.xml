<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--
	Parent POM for Spring Boot applications.
	Provides dependency management and default plugin configurations.
	-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version> <!-- Using a recent stable Spring Boot 3 version -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.ltfs.cdp</groupId>
	<artifactId>offer-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>offer-service</name>
	<description>Offer Service for LTFS Offer CDP - Manages customer offers and deduplication logic.</description>

	<properties>
		<java.version>17</java.version> <!-- Java 17 is an LTS version commonly used with Spring Boot 3 -->
		<lombok.version>1.18.30</lombok.version> <!-- Specify Lombok version explicitly -->
		<postgresql.version>42.7.3</postgresql.version> <!-- Specify PostgreSQL driver version -->
	</properties>

	<dependencies>
		<!-- Spring Boot Starter Web: Provides all necessary dependencies for building RESTful APIs. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Starter Data JPA: Provides dependencies for using Spring Data JPA with Hibernate. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- PostgreSQL Driver: JDBC driver for connecting to PostgreSQL database. -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok: A library that helps reduce boilerplate code (e.g., getters, setters, constructors). -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter Validation: Provides JSR-303 (Bean Validation) implementation (Hibernate Validator).
		     Essential for basic column-level validation on data moving from Offermart to CDP System. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Spring Boot Starter Actuator: Provides production-ready features like monitoring and management.
		     Useful for microservices to expose health, metrics, info endpoints. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Boot DevTools: Provides development-time features like automatic restarts and LiveReload.
		     Only active during development, not packaged in production JARs. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter Test: Provides dependencies for testing Spring Boot applications.
		     Includes JUnit, Mockito, AssertJ, Spring Test, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Optional: If event-driven components involve Kafka/RabbitMQ, add respective starters.
		     Example for Kafka (uncomment if needed):
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		-->
	</dependencies>

	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin: Packages the project as an executable JAR/WAR.
			     Also provides 'run' goal to run the application directly from Maven. -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Maven Compiler Plugin: Ensures the project is compiled with the specified Java version. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version> <!-- Inherited from parent, but good to be explicit if needed -->
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<!-- Add other annotation processors if necessary, e.g., MapStruct -->
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>