package com.ltfs.cdp.offer.event;

import lombok.Builder;
import lombok.Value;
import java.time.Instant;

/**
 * Represents an event published when a new offer is successfully created in the system.
 * This event serves as a notification to other microservices or components that an offer
 * has been finalized and is now available. It carries essential identifiers and a timestamp
 * to enable downstream processing without immediate database lookups for basic information.
 *
 * This class is designed to be immutable, ensuring that the event data remains consistent
 * once it has been created and published.
 */
@Value // Generates getters, equals, hashCode, toString, and an all-args constructor. Makes the class immutable.
@Builder // Provides a fluent API for constructing instances of this event, enhancing readability.
public class OfferCreatedEvent {

    /**
     * The unique identifier of the newly created offer.
     * This ID is the primary key for the offer entity and can be used by consumers
     * to retrieve full offer details from the offer service if more information is required.
     */
    private final String offerId;

    /**
     * The unique identifier of the customer to whom this offer is extended.
     * This links the offer to a specific customer profile in the CDP system.
     */
    private final String customerId;

    /**
     * The unique identifier of the campaign under which this offer was generated.
     * This helps in tracking the origin and context of the offer.
     */
    private final String campaignId;

    /**
     * A business-friendly reference number for the offer. This might be an external-facing
     * identifier used for communication with the customer or for internal tracking purposes
     * that are more human-readable than the internal offerId.
     */
    private final String offerReferenceNumber;

    /**
     * The timestamp indicating when this event was created and published.
     * It uses {@link java.time.Instant} for precise, machine-readable time in UTC,
     * which is crucial for auditing and sequencing events in an event-driven architecture.
     */
    private final Instant eventTimestamp;

    // No explicit constructor, getters, setters, equals, hashCode, or toString methods are
    // defined here, as they are automatically generated by the Lombok @Value annotation,
    // ensuring conciseness and correctness for an immutable data class.
}