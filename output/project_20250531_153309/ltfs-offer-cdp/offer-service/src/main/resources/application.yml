# Server configuration
server:
  port: 8081 # Default port for the Offer Service microservice

# Spring Data JPA and DataSource configuration for PostgreSQL
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/offer_db # Database URL. In production, this should be externalized (e.g., environment variable, Spring Cloud Config).
    username: offer_user # Database username. Placeholder.
    password: offer_password # Database password. Placeholder.
    driver-class-name: org.postgresql.Driver # PostgreSQL JDBC driver
    hikari: # HikariCP connection pool configuration for optimal performance
      maximum-pool-size: 10 # Maximum number of connections in the pool
      minimum-idle: 5 # Minimum number of idle connections to maintain
      idle-timeout: 30000 # Maximum idle time for a connection (30 seconds)
      connection-timeout: 30000 # Maximum wait time for a connection from the pool (30 seconds)
      pool-name: OfferServiceHikariCP # Name for the connection pool
  jpa:
    hibernate:
      ddl-auto: none # Hibernate DDL generation strategy.
      # 'none' is recommended for production environments, as schema migrations should be managed by dedicated tools like Flyway or Liquibase.
      # For development/testing, 'update' or 'create-drop' might be used.
    show-sql: false # Set to 'true' to log SQL queries executed by Hibernate (useful for debugging, but disable in production).
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect # Specifies the SQL dialect for PostgreSQL
        format_sql: false # Set to 'true' to format SQL logs for better readability.
        # Naming strategy to convert Java camelCase to database snake_case for table and column names.
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

  # Spring Task Scheduling configuration for background jobs
  task:
    scheduling:
      pool:
        size: 5 # Number of threads in the scheduling pool for concurrent tasks
      thread-name-prefix: offer-scheduler- # Prefix for scheduler thread names

# Application-specific properties for the Offer Service
app:
  offer:
    expiry-processing:
      enabled: true # Flag to enable or disable the scheduled offer expiry processing task
      cron: "0 0 2 * * ?" # Cron expression for the offer expiry processing task.
      # This example cron expression means: "At 02:00:00 AM every day".
      # Format: second minute hour day-of-month month day-of-week
      # For more details on cron expressions: https://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html
    default-validity-days: 30 # Default number of days an offer is valid from its creation date

# Logging configuration
logging:
  level:
    root: INFO # Default logging level for all loggers
    org.springframework.web: INFO # Logging level for Spring Web components
    org.hibernate: INFO # Logging level for Hibernate. Set to DEBUG for detailed ORM logs.
    com.ltfs.offer: DEBUG # Logging level for application-specific packages. Set to INFO or WARN for production.

# Spring Boot Actuator for monitoring and management
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus # Expose common Actuator endpoints over HTTP for monitoring
  endpoint:
    health:
      show-details: always # Always show full health details (e.g., database status, disk space)
    metrics:
      tags:
        application: offer-service # Custom tag for metrics, useful for distinguishing services in monitoring tools