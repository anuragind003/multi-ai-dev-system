apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  labels:
    app: config-server
    tier: common-services
    project: ltfs-offer-cdp
spec:
  replicas: 1 # Typically 1 replica is sufficient for a Config Server, scale if high availability for config retrieval is critical.
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
        tier: common-services
        project: ltfs-offer-cdp
    spec:
      containers:
        - name: config-server
          image: ltfs-offer-cdp/config-server:1.0.0 # Replace with your actual image name and tag
          imagePullPolicy: Always # Use Always for development/testing, IfNotPresent or Never for production with pre-pulled images
          ports:
            - containerPort: 8888 # Default port for Spring Cloud Config Server
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: kubernetes # Activates the 'kubernetes' Spring profile for the application
            - name: SPRING_CLOUD_CONFIG_SERVER_GIT_URI
              value: "https://github.com/your-org/ltfs-offer-cdp-config.git" # Replace with your actual Git repository URI for configurations
            # Uncomment and configure if your Git repository requires authentication
            # - name: SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME
            #   valueFrom:
            #     secretKeyRef:
            #       name: git-credentials # Name of the Kubernetes Secret holding Git credentials
            #       key: username
            # - name: SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: git-credentials # Name of the Kubernetes Secret holding Git credentials
            #       key: password
            - name: JAVA_OPTS
              value: "-Xms256m -Xmx512m" # JVM memory settings for the Spring Boot application
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "768Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness # Spring Boot Actuator liveness probe endpoint
              port: 8888
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness # Spring Boot Actuator readiness probe endpoint
              port: 8888
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: config-server
  labels:
    app: config-server
    tier: common-services
    project: ltfs-offer-cdp
spec:
  selector:
    app: config-server # Selects pods with the label app: config-server
  ports:
    - protocol: TCP
      port: 8888 # The port on which the service will be exposed
      targetPort: 8888 # The port on the pod to which the service will send traffic
      name: http
  type: ClusterIP # Exposes the service on a cluster-internal IP. Only accessible from within the cluster.